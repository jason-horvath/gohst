#!/bin/bash

# Define the root directory of your project
ROOT_DIR="$(cd "$(dirname "$0")" && pwd)"
TMP_DIR="$ROOT_DIR/tmp"
CMD_DIR="$ROOT_DIR/cmd"
CMD_DEV_DIR="$CMD_DIR/dev"
GOHST_SERVER="$CMD_DEV_DIR/gohst_server"
DOCKER_SQL_BUILD="$CMD_DEV_DIR/docker_sql_build"
DOCKER_SQL_CLEAR="$CMD_DEV_DIR/docker_sql_clear"
STORAGE_MGR="$CMD_DEV_DIR/storage_mgr"
VITE_PROCESS="$CMD_DEV_DIR/vite_process"
VITE_PID_FILE="$TMP_DIR/vite.pid"


check_for_env() {
    # Step 1: Check if .env file exists
    if [ ! -f "$ROOT_DIR/.env" ]; then
        echo "❌ .env file not found!"
        echo "👉 Please copy .env.example to .env and configure it before proceeding."
        exit 1
    fi
}

check_for_env

wait_for_mysql() {
    spinner="/|\\-"
    i=0
    echo "🐬 :: MySQL startup ::"
    until docker exec gohst-gohst-mysql-1 mysqladmin ping -h "localhost" --silent; do
        i=$(( (i+1) %4 ))
        printf "\r⏳ Waiting for MySQL %s%s" "${spinner:$i:1}" "$(printf '.' %.0s {1..$i})"
        echo -n "."
        sleep 1
    done

    echo ""
}

case "$1" in
    server:start)
        exec "$GOHST_SERVER" "start"
        ;;
    server:stop)
        exec "$GOHST_SERVER" "stop"
        ;;
    docker:sql::build)
        exec "$DOCKER_SQL_BUILD"
        ;;
    docker:sql:clear)
        exec "$DOCKER_SQL_CLEAR"
        ;;
    docker:rebuild)
        "$DOCKER_SQL_BUILD"
        sleep 2
        docker compose down -v
        docker compose up -d --build
        ;;
    build)
        echo "🚀 Building development environment..."

        # Step 1: Run database migrations & seeds
        echo "🔗 Ensuring database migrations & seeds are linked..."
        "$DOCKER_SQL_BUILD"

        # Step 2: Build Docker containers
        echo "🐳 Building Docker containers..."
        docker compose build

        # Step 3: Install npm dependencies
        echo "📦📦 Installing NPM Packages  📦📦"
        cd "$ROOT_DIR" || exit
        npm install

        "$STORAGE_MGR" "link"

        echo "✅ Gohst is built!"
        echo "👻 To begin, run: run: gohst up"
        ;;
    destroy)
        echo "🔥 Destroying development environment..."

        # Step 1: Bring down Docker
        docker compose down -v
        "$DOCKER_SQL_CLEAR"

        # Step 2: Start Air for live-reloading Go server
        echo "💨 Stopping Gohst server..."

        # Step 3: Stop Vite if running
        if [ -f "$VITE_PID_FILE" ]; then
            echo "🛑 Stopping Vite..."
            kill $(cat "$VITE_PID_FILE") && rm "$VITE_PID_FILE"
            echo "✅ Vite stopped."
        else
            echo "ℹ️  No Vite process found."
        fi

        # Step 4: Remove node_modules
        if [ -d "$ROOT_DIR/node_modules" ]; then
            echo "🗑 Removing node_modules directory..."
            rm -rf "$ROOT_DIR/node_modules"
            echo "✅ node_modules removed."
        else
            echo "ℹ️  No node_modules directory found."
        fi

        # Step 5: Make sure the gohst server is down
        cd "$ROOT_DIR" || exit
        exec "$GOHST_SERVER" "stop"

        # Step 6: tmp directory cleanup

        echo "✅ Dev environment is destroyed!"
        ;;
    dev)
        echo ""
        echo "🚀 Starting development environment..."

        # Step 1: Bring up Docker
        echo "🐳 Bringing up Docker containers..."
        docker compose up -d

        # Start Cite
        "$VITE_PROCESS" "start"

        # Step 4: Wait for MySQL to be ready
        wait_for_mysql

        # Step 5: Start GOHST Server for live-reloading Go server
        cd "$ROOT_DIR" || exit
        "$GOHST_SERVER" "start"

        # After killing signal: stop gohst stop Vite, stop Docker
        echo "🛑 Stopping Gohst server"
        "$GOHST_SERVER" "stop"

        echo "🛑 Stopping Vite"
        "$VITE_PROCESS" "stop"

        echo "🛑 Stopping Docker"
        docker compose stop
        echo "🛑 Dev environment manually halted!"
        echo ""
        ;;

     dev:down)
        echo ""
        echo "🛑 Stopping development environment..."

        # Step 1: Bring down Docker
        echo "🐳 Bringing down Docker containers..."
        docker compose stop

         # Step2: Stop Vite if running
        if [ -f "$VITE_PID_FILE" ]; then
            echo "🛑 Stopping Vite..."
            kill $(cat "$VITE_PID_FILE") && rm "$VITE_PID_FILE"
            echo "✅ Vite stopped."
        else
            echo "ℹ️  No Vite process found."
        fi

        # Step 3: Start Air for live-reloading Go server
        echo -e "💨 Stopping Gohst Server..."
        cd "$ROOT_DIR" || exit
        "$GOHST_SERVER" "stop"
        docker compose stop
        echo "🛑 Dev environment is down!"
        echo ""
        ;;
    storage:link)
        "$STORAGE_MGR" "link"
        ;;
    *)
        echo ""
        echo -e "====++++====++++====++++====++++====++++====++++====++++====\n"
        echo -e "      👻👻👻 Usage: gohst <command>:[arguments] 👻👻👻      \n"
        echo -e "====++++====++++====++++====++++====++++====++++====++++====\n"
        echo "Available commands:"
        echo ""
        echo "  build               - Build the development environment with dockersql files: npm, docker, vite, gohst"
        echo "  destroy             - Destroy the development environment including docker, sql files: npm, docker, vite, gohst"
        echo "  dev                 - Bring up the development environment: npm, docker, vite, gohst"
        echo "  dev:down            - Bring down the development environment: npm, docker, vite, gohst"
        echo "  server:start        - Start the gohst server"
        echo "  server:stop         - Stop the ghost server"
        echo "  docker:sql:build    - Set up database migrations & seeds for docker"
        echo "  docker:sql:clear    - Delete migrations & seeds for docker"
        echo "  docker:rebuild      - Rebuild docker"
        echo "  stroge:link         - Link assets to the static directory"
        echo ""
        exit 1
        ;;
esac
